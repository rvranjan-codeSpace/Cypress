{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2023-03-30T14:24:42.780Z",
    "end": "2023-03-30T14:24:43.516Z",
    "duration": 736,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7cbb3471-cfb3-4d6b-a5ca-993dd8380abc",
      "title": "",
      "fullFile": "cypress\\integration\\API\\POST.ts",
      "file": "cypress\\integration\\API\\POST.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "06b02860-f92f-4947-bf8e-726bceb38613",
          "title": "API testsPOTS",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Simple REST API POST to create a user",
              "fullTitle": "API testsPOTS Simple REST API POST to create a user",
              "timedOut": null,
              "duration": 345,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var PATTERN = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijkalmanopqrstuvwxyz\";\nfor (var i = 0; i < 10; i++) {\n    randomText += PATTERN.charAt(Math.floor(Math.random() * PATTERN.length));\n}\ntestEmail = randomText + \"@abcd.com\";\ncy.fixture('User').then(UserData => {\n    // if we use this approach then entire cy.request we need to write it in this block\n    cy.log(\"In the fixture name=\" + UserData.name + \" gender=\" + UserData.gender + \" status=\" + UserData.status);\n});\ncy.request({\n    method: 'POST',\n    url: \"https://gorest.co.in/public/v2/users\",\n    headers: {\n        \"Authorization\": \"Bearer \" + API_TOKEN\n    },\n    body: {\n        \"email\": testEmail,\n        \"gender\": userData.gender,\n        \"name\": userData.name,\n        \"status\": userData.status\n    }\n}).then((resp) => {\n    // expect(resp.body.data).has.property('email',testEmail)\n    expect(resp.status).to.equal(201);\n    expect(resp.body.gender).to.equal(\"male\");\n    expect(resp.body.email).to.equal(testEmail);\n    cy.log(JSON.stringify(resp));\n});",
              "err": {},
              "uuid": "0c51ef35-1b58-439a-8a69-6474d629877c",
              "parentUUID": "06b02860-f92f-4947-bf8e-726bceb38613",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get respone from custom command",
              "fullTitle": "API testsPOTS get respone from custom command",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getUsers(\"userId\");\ncy.get('@resp').then((data) => {\n    cy.log(\"response:\" + data.body.name);\n    cy.log(\"response:\" + data.body.email);\n    cy.log(\"response:\" + data.body.gender);\n    cy.log(\"response:\" + data.body.status);\n});",
              "err": {},
              "uuid": "17b005e0-2fda-424f-8e62-977191f18a4b",
              "parentUUID": "06b02860-f92f-4947-bf8e-726bceb38613",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get  Objecy from custom command",
              "fullTitle": "API testsPOTS get  Objecy from custom command",
              "timedOut": null,
              "duration": 192,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getUsersObject(\"userId\");\ncy.get('@resp').then((data) => {\n    cy.log(\"response:\" + data.name);\n    cy.log(\"response:\" + data.email);\n});",
              "err": {},
              "uuid": "112bf1ba-303a-469e-b676-0c5a172524da",
              "parentUUID": "06b02860-f92f-4947-bf8e-726bceb38613",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0c51ef35-1b58-439a-8a69-6474d629877c",
            "17b005e0-2fda-424f-8e62-977191f18a4b",
            "112bf1ba-303a-469e-b676-0c5a172524da"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 711,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "custom-title",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false,
        "html": false,
        "overwrite": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}